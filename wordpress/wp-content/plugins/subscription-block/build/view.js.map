{"version":3,"file":"view.js","mappings":"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","sources":["webpack://subscription-block/./src/view.js"],"sourcesContent":["/**\n * Use this file for JavaScript code that you want to run in the front-end\n * on posts/pages that contain this block.\n *\n * When this file is defined as the value of the `viewScript` property\n * in `block.json` it will be enqueued on the front end of the site.\n *\n * Example:\n *\n * ```js\n * {\n *   \"viewScript\": \"file:./view.js\"\n * }\n * ```\n *\n * If you're not making any changes to this file because your project doesn't need any\n * JavaScript running in the front-end, then you should delete this file and remove\n * the `viewScript` property from `block.json`.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-metadata/#view-script\n */\n\n/* eslint-disable no-console */\n// console.log(\n// \t'Hello World! (from subscription-block-subscription-block block)'\n// );\n/* eslint-enable no-console */\n\n(function () {\n\tdocument.addEventListener(\"DOMContentLoaded\", () => {\n\t\tbitcoin(); // run on page load\n\t\tsetInterval(bitcoin, 60000); // set interval (1 min)\n\t\tfetchRates(); // on button click\n\t});\n})();\n\n/**\n * Manual call API bitcoin rate by button click\n */\nconst fetchRates = () => {\n\tconst btns = document.querySelectorAll(\".bitcoin-rate-fetch\");\n\n\tbtns.forEach((btn) => {\n\t\tbtn.addEventListener(\"click\", () => {\n\t\t\tbitcoin();\n\n\t\t\t// Disable btn to prevent multiple pending quieries.\n\t\t\tbtn.disabled = true;\n\t\t});\n\t});\n};\n\nconst bitcoin = async () => {\n\tconst url = \"https://api.coindesk.com/v1/bpi/currentprice.json\";\n\n\ttry {\n\t\tconst response = await fetch(url);\n\t\tconst json = await response.json();\n\t\tconst currencyRates = json.bpi;\n\n\t\tpasteBitcoinRate(currencyRates);\n\t} catch (error) {\n\t\tconsole.warn(\"Bitcoin Price API error:\", error);\n\t}\n};\n\nconst pasteBitcoinRate = (currencyRates) => {\n\tconst sections = document.querySelectorAll(\".bitcoin-rate\");\n\n\t// If section with rate not exist - exit from function.\n\tif (!sections.length) {\n\t\treturn false;\n\t}\n\n\tsections.forEach((section) => {\n\t\tconst currenciesArr = Object.entries(currencyRates);\n\n\t\tcurrenciesArr.forEach((arr, index) => {\n\t\t\tconst [key, value] = arr;\n\n\t\t\t// Get field of section for key\n\t\t\tconst currencyField = section.querySelector(\n\t\t\t\t\".bitcoin-rate-item--\" +\n\t\t\t\t\tkey.toLowerCase() +\n\t\t\t\t\t\" .bitcoin-rate-item-value\",\n\t\t\t);\n\n\t\t\t// New value\n\t\t\tconst rateFloat = roundNumber(value.rate_float);\n\n\t\t\t// Do nothing if field has '...' value before.\n\t\t\tif (currencyField.innerText != \"...\") {\n\t\t\t\t// If new value less than old - add 'down' class or if it more than old - add class 'up'.\n\t\t\t\tif (currencyField.innerText > rateFloat) {\n\t\t\t\t\tcurrencyField.classList.add(\"down\");\n\t\t\t\t} else if (currencyField.innerText < rateFloat) {\n\t\t\t\t\tcurrencyField.classList.add(\"up\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Paste new value.\n\t\t\tcurrencyField.innerText = rateFloat;\n\n\t\t\t// Remove added 'up' or 'down' classes, which added before after 1 sec.\n\t\t\tsetTimeout(() => {\n\t\t\t\tcurrencyField.classList.remove(\"down\", \"up\");\n\t\t\t}, 1000);\n\n\t\t\tconst btn = section.querySelector(\".bitcoin-rate-fetch\");\n\n\t\t\t// Enable btn - it could be disabled to prevent multiple pending quieries.\n\t\t\tbtn.disabled = false;\n\t\t});\n\t});\n};\n\nconst roundNumber = (number) => {\n\t// Remove the comma and parse the number\n\tconst parsedNumber = parseFloat(number.toString().replace(/,/g, \"\"));\n\n\t// Round to two decimal places\n\tconst roundedNumber = parsedNumber.toFixed(2);\n\n\t// Add back the comma for formatting\n\treturn new Intl.NumberFormat(\"en-US\").format(roundedNumber);\n};\n"],"names":["document","addEventListener","bitcoin","setInterval","fetchRates","btns","querySelectorAll","forEach","btn","disabled","url","response","fetch","json","currencyRates","bpi","pasteBitcoinRate","error","console","warn","sections","length","section","currenciesArr","Object","entries","arr","index","key","value","currencyField","querySelector","toLowerCase","rateFloat","roundNumber","rate_float","innerText","classList","add","setTimeout","remove","number","parsedNumber","parseFloat","toString","replace","roundedNumber","toFixed","Intl","NumberFormat","format"],"sourceRoot":""}